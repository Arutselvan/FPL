{{<layout}}
{{$content}}
    <script>
              
    $.extend(true, $.simplyToast.defaultOptions,
    {
        allowDismiss:true,
        delay:1000,
        align:"center",
        
    });
    var socket = io('/gameEngine');
        var batting;//set to true if team is batting else set it to false
        var batsmen = Array(2);
        var bowler;
        var playStyle; //Attack or Defend
        var match= {};
        socket.on('resultFromServer',function(mesg){
            var text="";
            console.log(mesg);

            if(mesg.result.result != -1){
                text = mesg.result.batsman.name + " scored " + mesg.result.result + " off " + mesg.result.bowler.name + "\n";
            }else{
                text = mesg.result.batsman.name + " is out. Wicket taken by " + mesg.result.bowler.name + "\n";
            }
            switch(mesg.msg){
                case "firstInnings":
                    alert(text+"First Innings is over.","danger");
                    location.reload();
                    break;
                case "matchOver":
                    alert(text+"Match is over.","danger"); 
                    var form = document.createElement("form");
                    form.setAttribute("method", "POST");
                    form.setAttribute("action","/Match/");
                    document.body.appendChild(form);
                    form.submit();
                    break;
                case "":
                    $.simplyToast(text,"danger");
                    break;
                default:
                    $.simplyToast(text,"danger");
            }
            var buttons = $('.playStyle');
            buttons[0].disabled = false;
            buttons[1].disabled = false;
});
        socket.on('initialize',function(msg){

            batting = msg.batting;
            match = msg.match;
            console.log(match);
            batsmen[0] = "";
            batsmen[1] = "";
            bowler = "";
            playStyle = null;
            $(".players").remove();
            var heading1 = document.getElementById("batting").getElementsByTagName("h3");
            var heading2 = document.getElementById("bowling").getElementsByTagName("h3");
            var battingTeam,bowlingTeam;
            if(match.innings == 1){
                battingTeam = "team1";
                bowlingTeam = "team2";
            }else{
                battingTeam = "team2";
                bowlingTeam = "team1";
            }
            heading1[0].innerHTML = match[battingTeam].team.name;
            heading2[0].innerHTML = match[bowlingTeam].team.name;
            var wickets =0;
            for(var i=0;i<11;i++){
                var Player = match[battingTeam].playersStats[i];
                var className = Player.battingStatus;
                if(className == "inStrike")
                    batsmen[0] = Player.player.name;
                if(className == "notOut")
                    batsmen[1] = Player.player.name;
                if(className == "out")
                    wickets++;
                if(className != "notPlayed")
                    var html = playerParser(Player,true,className,null);
                else
                    var html = playerParser(Player,true,className,selectBatsman);
                $("#battingStats").append(html);
            }
            for(var i=0;i<11;i++){
                var Player = match[bowlingTeam].playersStats[i];
                var className = Player.bowlingStatus;
                if(className == "bowling")
                    bowler = Player.player.name;
                if(className =="oversDone")
                    var html = playerParser(Player,false,className,null);
                else
                    var html = playerParser(Player,false,className,selectBowler);
                $("#bowlingStats").append(html);
            }
            $("#instrike").text(batsmen[0]);
            $("#notout").text(batsmen[1]);
            $("#bowler").text(bowler);
            $("#teamScore").text(match[battingTeam].runsScored);
            $("#teamBalls").text(match[bowlingTeam].ballsBowled);
            $("#teamWickets").text(wickets);
            console.log(batting);
            if(match.innings == 2){
                var temp = match[bowlingTeam].runsScored - match[battingTeam].runsScored+1; 
                $("#misc").text(temp + " more runs to win" );               
            }
            if(batting)
             $("#battingStats").tableDnD({
                 onDrop : function(table,row){
                     console.log(row);
                      var rows = table.tBodies[0].rows;
                    for(var i=0;i<rows.length;i++){
                        if(row.id==rows[i].id){
                            var data = {
                                index : i-1,
                                movedId : row.id
                            }
                            socket.emit("reorderBatsman",data);
                            break;
                        }
                    }
                }
            });
            });
        function playerParser(Player,statBool,className,clickFunction){
            var str = "<tr id='"+Player.player._id+"' class = 'players "+className+"'>";
            str = str + "<td align='left'>"+Player.player.name+"</td>";
            if(statBool)
                str = str + "<td align='center'>"+Player.player.battingSkill+"</td>";
            else
                str = str + "<td align='center'>"+Player.player.bowlingSkill+"</td>";
            str = str + "<td align='center'>"+Player.player.confidence+"</td>";
            if(statBool)
                str = str + "<td align='center'>"+Player.runsScoredInMatch+"</td>";
            else
                str = str + "<td align='center'>"+Player.ballsBowledInMatch+"</td>";
            str = str + "</tr>";
            var html = $.parseHTML(str);
            $(html).click(clickFunction);
            return html;
        }
        var selectBatsman = function(){
            return;
        }
        var selectBowler = function(){
            if(!(bowler==""&&!batting))
                return;
            var data = this.id;
            socket.emit("setBowler",data);
            }
        function setPlayingStyle(styleObj){
            if((batsmen[0]==""||batsmen[1]=="")&&batting){
                $.simplyToast("Please choose your batsman","danger");
                return;
            }
            if(bowler==""&&!batting){
               $.simplyToast("Please choose your bowler","danger");
                return;
            }
            playStyle = styleObj.innerHTML;
            socket.emit("setStyle",playStyle);
            var buttons = $('.playStyle');
            buttons[0].disabled = true;
            buttons[1].disabled = true;
        }

    </script>
  <h5 id="misc"></h5>
  <div id="batting" style="float:left">
    <center>Batting<h3></h3></center>
    <table id ="battingStats" class="table table-condensed">
    <tr><th>Name</th><th>Batting Skill</th><th>Confidence</th><th>Score</th></tr>
    </table>
  </div>
  <div id="bowling" style="float:right">
    <center>Bowling<h3></h3></center>
    <table id ="bowlingStats" class="table table-condensed">
    <tr><th>Name</th><th>Bowling Skill</th><th>Confidence</th><th>Balls bowled</th></tr>
    </table>
  </div>
  <br><br><br>
  <h3><div id="bowler" class="inAction label label-primary" style="float:right">TEMPORARY</div></h3>
  <h3><div id="instrike" class="inAction label label-success" style="">TEMPORARY</div><br></h3>
  <h3><div id="notout" class="inAction label label-info" style="">TEMPORARY</div></h3>
  <br>
<center> 
<span id="teamScore" class="inAction">54</span><span class="inAction">/</span><span id="teamWickets" class="inAction" >5</span><br>
<div id="teamBalls" class="inAction">30</div><br>
<button class ="playStyle btn btn-danger" type="button" onclick = "setPlayingStyle(this)" >Attack</button><br><br>
<button class ="playStyle btn btn-success" type="button" onclick="setPlayingStyle(this)" >Defend</button>
</center>
{{/content}}
{{/layout}}
